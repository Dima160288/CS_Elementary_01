1 - Создайте программу, которая будет выводить на экран цепочки падающих символов. Длина каждой цепочки задается случайно. Первый символ цепочки – белый, второй символ – светло-зеленый, остальные символы темно-зеленые. Во время падения цепочки, на каждом шаге, все символы меняют свое значение. Дойдя до конца, цепочка исчезает и сверху формируется новая цепочка. Смотрите ниже снимок экрана, представленный как образец. 

2 - Расширьте задание 1, так, чтобы в одном столбце одновременно могло быть две цепочки символов. 

3 - Создайте консольное приложение, которое в различных потоках сможет получить доступ к 2-м файлам. Считайте из этих файлов содержимое и попытайтесь записать полученную информацию в третий файл. Чтение/запись должны осуществляться одновременно в каждом из дочерних потоков. Используйте блокировку потоков для того, чтобы добиться корректной записи в конечный файл. 

4 - Напишите программу, которая в несколько потоков скачивает файлы по заданному списку URL-адресов. Используйте «традиционную» многопоточность с мьютексами, семафорами и так далее.


5 - Создайте приложение WindowsForms. На главной форме приложения разместите 3 кнопки с названиями: IsComplete, End, Callback. Организуйте обработчики нажатия на кнопки таким образом, чтобы они инициировали асинхронное выполнение некоторого метода (метод определите сами, можно воспользоваться чем-то вроде Add или более абстрактного Compute). Для каждой из кнопок завершение асинхронного метода должно отслеживаться соответствующим образом: · IsComplete – с использованием значения свойства IsComplete · End – просто применяя EndInvoke · Callback – с использованием callback метода 

6 - Создайте консольное приложение, в котором организуйте асинхронный вызов метода. Используя конструкцию BeginInvoke передайте в поток некоторую информацию (возможно, в формате строки). Организуйте обработку переданных данных в callback методе. 